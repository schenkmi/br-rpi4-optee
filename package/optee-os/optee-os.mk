OPTEE_OS_VERSION = 3.2.0
OPTEE_OS_SITE = $(call github,OP-TEE,optee_os,$(OPTEE_OS_VERSION))
OPTEE_OS_INSTALL_STAGING = YES
OPTEE_OS_INSTALL_IMAGES = YES
OPTEE_OS_DEPENDENCIES = host-python-pycrypto

OPTEE_OS_BUILD_PARAMS = PLATFORM=$(BR2_PACKAGE_OPTEE_OS_PLATFORM) \
	DEBUG=y NOWERROR=1 CFG_TEE_CORE_LOG_LEVEL=3 CFG_TEE_CORE_DEBUG=y	

ifeq ($(BR2_PACKAGE_OPTEE_OS_64BIT), y)
	OPTEE_OS_BUILD_PARAMS += CROSS_COMPILE64=$(TARGET_CROSS) CFG_ARM64_core=y
	OPTEE_OS_OUT_SOURCE = $(@D)/out/arm-plat-$(BR2_PACKAGE_OPTEE_OS_PLATFORM)/export-ta_arm64/
else
	OPTEE_OS_BUILD_PARAMS += CROSS_COMPILE=$(TARGET_CROSS) CFG_ARM32_core=y
	OPTEE_OS_OUT_SOURCE = $(@D)/out/arm-plat-$(BR2_PACKAGE_OPTEE_OS_PLATFORM)/export-ta_arm32/
endif

define OPTEE_OS_BUILD_CMDS
	$(MAKE) -C $(@D) $(TARGET_CONFIGURE_OPTS) \
	$(OPTEE_OS_BUILD_PARAMS)
endef

define OPTEE_OS_ADD_NW_MEM_API
	cp -r $(OPTEE_OS_PKGDIR)/nw-mem-api/* $(@D)/core/arch/arm/pta/
endef

OPTEE_OS_PRE_PATCH_HOOKS += OPTEE_OS_ADD_NW_MEM_API

define OPTEE_OS_INSTALL_STAGING_CMDS
	rsync -a $(OPTEE_OS_OUT_SOURCE) $(STAGING_DIR)/ta_dev_kit
endef

define OPTEE_OS_INSTALL_IMAGES_CMDS
	$(INSTALL) -m 755 -D $(@D)/out/arm-plat-$(BR2_PACKAGE_OPTEE_OS_PLATFORM)/core/tee-pager.bin $(BINARIES_DIR)/tee-pager.bin
	$(INSTALL) -m 755 -D $(@D)/out/arm-plat-$(BR2_PACKAGE_OPTEE_OS_PLATFORM)/core/tee.bin $(BINARIES_DIR)/tee.bin
endef

$(eval $(generic-package))
